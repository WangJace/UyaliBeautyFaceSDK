#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
#ifndef UYALIBEAUTYFACESDK_SWIFT_H
#define UYALIBEAUTYFACESDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreVideo;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="UyaliBeautyFaceSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
/// 美妆：腮红类型
typedef SWIFT_ENUM(NSInteger, MakeupBlushType, closed) {
/// 无
  MakeupBlushTypeBlush_none = 0,
/// 无辜——奶杏色
  MakeupBlushTypeBlush_wugu_naixingse = 1,
/// 无辜——奶橘色
  MakeupBlushTypeBlush_wugu_naijuse = 2,
/// 无辜——蜜桃橘
  MakeupBlushTypeBlush_wugu_mitaoju = 3,
/// 无辜——烟熏玫瑰
  MakeupBlushTypeBlush_wugu_yanxunmeigui = 4,
/// 无辜——牛奶草莓
  MakeupBlushTypeBlush_wugu_niunaicaomei = 5,
/// 茶艺——奶杏色
  MakeupBlushTypeBlush_chayi_naixingse = 6,
/// 茶艺——奶橘色
  MakeupBlushTypeBlush_chayi_naijuse = 7,
/// 茶艺——蜜桃橘
  MakeupBlushTypeBlush_chayi_mitaoju = 8,
/// 茶艺——烟熏玫瑰
  MakeupBlushTypeBlush_chayi_yanxunmeigui = 9,
/// 茶艺——牛奶草莓
  MakeupBlushTypeBlush_chayi_niunaicaomei = 10,
/// 初恋——奶杏色
  MakeupBlushTypeBlush_chulian_naixingse = 11,
/// 初恋——奶橘色
  MakeupBlushTypeBlush_chulian_naijuse = 12,
/// 初恋——蜜桃橘
  MakeupBlushTypeBlush_chulian_mitaoju = 13,
/// 初恋——烟熏玫瑰
  MakeupBlushTypeBlush_chulian_yanxunmeigui = 14,
/// 初恋——牛奶草莓
  MakeupBlushTypeBlush_chulian_niunaicaomei = 15,
/// 纯情——奶杏色
  MakeupBlushTypeBlush_chunqing_naixingse = 16,
/// 纯情——奶橘色
  MakeupBlushTypeBlush_chunqing_naijuse = 17,
/// 纯情——蜜桃橘
  MakeupBlushTypeBlush_chunqing_mitaoju = 18,
/// 纯情——烟熏玫瑰
  MakeupBlushTypeBlush_chunqing_yanxunmeigui = 19,
/// 纯情——牛奶草莓
  MakeupBlushTypeBlush_chunqing_niunaicaomei = 20,
/// 奇迹——奶杏色
  MakeupBlushTypeBlush_qiji_naixingse = 21,
/// 奇迹——奶橘色
  MakeupBlushTypeBlush_qiji_naijuse = 22,
/// 奇迹——蜜桃橘
  MakeupBlushTypeBlush_qiji_mitaoju = 23,
/// 奇迹——烟熏玫瑰
  MakeupBlushTypeBlush_qiji_yanxunmeigui = 24,
/// 奇迹——牛奶草莓
  MakeupBlushTypeBlush_qiji_niunaicaomei = 25,
/// 少女——奶杏色
  MakeupBlushTypeBlush_shaonv_naixingse = 26,
/// 少女——奶橘色
  MakeupBlushTypeBlush_shaonv_naijuse = 27,
/// 少女——蜜桃橘
  MakeupBlushTypeBlush_shaonv_mitaoju = 28,
/// 少女——烟熏玫瑰
  MakeupBlushTypeBlush_shaonv_yanxunmeigui = 29,
/// 少女——牛奶草莓
  MakeupBlushTypeBlush_shaonv_niunaicaomei = 30,
};

/// 美妆：眉毛类型
typedef SWIFT_ENUM(NSInteger, MakeupEyebrowType, closed) {
/// 无
  MakeupEyebrowTypeEyebrow_none = 0,
/// 标准眉
  MakeupEyebrowTypeEyebrow_biaozhun = 1,
/// 蹙颦眉
  MakeupEyebrowTypeEyebrow_cupin = 2,
/// 罥烟眉
  MakeupEyebrowTypeEyebrow_juanyan = 3,
/// 流星眉
  MakeupEyebrowTypeEyebrow_liuxing = 4,
/// 柳叶眉
  MakeupEyebrowTypeEyebrow_liuye = 5,
/// 秋波眉
  MakeupEyebrowTypeEyebrow_qiubo = 6,
/// 弯月眉
  MakeupEyebrowTypeEyebrow_wanyue = 7,
/// 新月眉
  MakeupEyebrowTypeEyebrow_xinyue = 8,
/// 野生眉
  MakeupEyebrowTypeEyebrow_yesheng = 9,
/// 远山眉
  MakeupEyebrowTypeEyebrow_yuanshan = 10,
};

/// 美妆：眼妆类型
typedef SWIFT_ENUM(NSInteger, MakeupEyeshadowType, closed) {
/// 无
  MakeupEyeshadowTypeEyeshadow_none = 0,
/// 大地色
  MakeupEyeshadowTypeEyeshadow_dadise = 1,
/// 复古色
  MakeupEyeshadowTypeEyeshadow_fuguse = 2,
/// 方糖粉
  MakeupEyeshadowTypeEyeshadow_fangtangfen = 3,
/// 活力橘
  MakeupEyeshadowTypeEyeshadow_huoliju = 4,
/// 金棕色
  MakeupEyeshadowTypeEyeshadow_jinzongse = 5,
/// 朋克棕
  MakeupEyeshadowTypeEyeshadow_pengkezong = 6,
/// 甜橙色
  MakeupEyeshadowTypeEyeshadow_tianchengse = 7,
/// 星光粉
  MakeupEyeshadowTypeEyeshadow_xingguangfen = 8,
/// 烟粉色
  MakeupEyeshadowTypeEyeshadow_yanfense = 9,
/// 野蔷薇色
  MakeupEyeshadowTypeEyeshadow_yeqiangweise = 10,
/// 元气橙
  MakeupEyeshadowTypeEyeshadow_yuanqicheng = 11,
};

/// 美妆：美瞳类型
typedef SWIFT_ENUM(NSInteger, MakeupPupilType, closed) {
/// 无
  MakeupPupilTypePupil_none = 0,
/// 胶片棕
  MakeupPupilTypePupil_jiaopianzong = 1,
/// 蜜糖棕
  MakeupPupilTypePupil_mitangzong = 2,
/// 星夜蓝
  MakeupPupilTypePupil_xingyelan = 3,
/// 极昼黑
  MakeupPupilTypePupil_jizhouhei = 4,
/// 忽扰灰
  MakeupPupilTypePupil_wuraohui = 5,
/// 春日粉
  MakeupPupilTypePupil_chunrifen = 6,
/// 甜茶绿
  MakeupPupilTypePupil_tianchalv = 7,
/// 四叶草绿
  MakeupPupilTypePupil_siyecaolv = 8,
/// 旷野蓝
  MakeupPupilTypePupil_kuangyelan = 9,
/// 蔷薇粉灰
  MakeupPupilTypePupil_qiangweifenhui = 10,
/// 海风蓝
  MakeupPupilTypePupil_haifenglan = 11,
};

/// 美妆：口红类型
typedef SWIFT_ENUM(NSInteger, MakeupRougeType, closed) {
/// 无
  MakeupRougeTypeRouge_none = 0,
/// 梅子色
  MakeupRougeTypeRouge_meizise = 1,
/// 豆沙粉
  MakeupRougeTypeRouge_doushafen = 2,
/// 复古色
  MakeupRougeTypeRouge_fuguse = 3,
/// 鬼魅红
  MakeupRougeTypeRouge_guimeihong = 4,
/// 浆果色
  MakeupRougeTypeRouge_jiangguose = 5,
/// 南瓜色
  MakeupRougeTypeRouge_nanguase = 6,
/// 石榴红
  MakeupRougeTypeRouge_shiliuhong = 7,
/// 蜜桃色
  MakeupRougeTypeRouge_mitaose = 8,
/// 珊瑚色
  MakeupRougeTypeRouge_shanhuse = 9,
/// 星光红
  MakeupRougeTypeRouge_xingguanghong = 10,
/// 暗夜紫
  MakeupRougeTypeRouge_anyezi = 11,
/// 少女粉
  MakeupRougeTypeRouge_shaonvfen = 12,
};


SWIFT_CLASS("_TtC18UyaliBeautyFaceSDK21UyaliBeautyFaceEngine")
@interface UyaliBeautyFaceEngine : NSObject
/// 小头，参数范围：0.0 - 100.0
@property (nonatomic) float headReduce_delta;
/// 瘦脸，参数范围：0.0 - 100.0
@property (nonatomic) float faceThin_delta;
/// 窄脸，参数范围：0.0 - 100.0
@property (nonatomic) float faceNarrow_delta;
/// V脸，参数范围：0.0 - 100.0
@property (nonatomic) float faceV_delta;
/// 小脸，参数范围：0.0 - 100.0
@property (nonatomic) float faceSmall_delta;
/// 下巴，参数范围：-50.0 - 50.0
@property (nonatomic) float chin_delta;
/// 额头，参数范围：-50.0 - 50.0
@property (nonatomic) float forehead_delta;
/// 颧骨，参数范围：-50.0 - 50.0
@property (nonatomic) float cheekbone_delta;
/// 大眼，参数范围：0.0 - 100.0
@property (nonatomic) float eyeBig_delta;
/// 眼距，参数范围：-50.0 - 50.0
@property (nonatomic) float eyeDistance_delta;
/// 内眼角，参数范围：0.0 - 100.0
@property (nonatomic) float eyeCorner_delta;
/// 眼睑下至，参数范围：0.0 - 100.0
@property (nonatomic) float eyelidDown_delta;
/// 瘦鼻，参数范围：0.0 - 100.0
@property (nonatomic) float noseThin_delta;
/// 鼻翼，参数范围：0.0 - 100.0
@property (nonatomic) float noseWing_delta;
/// 长鼻，参数范围：-50.0 - 50.0
@property (nonatomic) float noseLong_delta;
/// 山根，参数范围：0.0 - 100.0
@property (nonatomic) float noseRoot_delta;
/// 眉间距，参数范围：-50.0 - 50.0
@property (nonatomic) float eyebrowDistance_delta;
/// 眉粗细，参数范围：-50.0 - 50.0
@property (nonatomic) float eyebrowThin_delta;
/// 嘴型，参数范围：-50.0 - 50.0
@property (nonatomic) float mouth_delta;
/// 美白，参数范围：0.0 - 100.0
@property (nonatomic) float white_delta;
/// 磨皮，参数范围： 0.0 - 100.0
@property (nonatomic) float skin_delta;
/// 亮眼，参数范围：0.0 - 100.0
@property (nonatomic) float eyeBright_delta;
/// 白牙，参数范围： 0.0 - 100.0
@property (nonatomic) float teethBright_delta;
/// 眉毛，参数范围：0.0 - 100.0
@property (nonatomic) float makeup_eyebrow_delta;
/// 眉毛类型
@property (nonatomic) enum MakeupEyebrowType makeup_eyebrow_type;
/// 眼妆，参数范围： 0.0 - 100.0
@property (nonatomic) float makeup_eyeshadow_delta;
/// 眼妆类型
@property (nonatomic) enum MakeupEyeshadowType makeup_eyeshadow_type;
/// 美瞳，参数范围：0.0 - 100.0
@property (nonatomic) float makeup_pupil_delta;
/// 美瞳类型
@property (nonatomic) enum MakeupPupilType makeup_pupil_type;
/// 腮红，参数范围：0.0 - 100.0
@property (nonatomic) float makeup_blush_delta;
/// 腮红类型
@property (nonatomic) enum MakeupBlushType makeup_blush_type;
/// 口红，参数范围：0.0 - 100.0
@property (nonatomic) float makeup_rouge_delta;
/// 口红类型
@property (nonatomic) enum MakeupRougeType makeup_rouge_type;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)processWithPixelBuffer:(CVPixelBufferRef _Nonnull)pixelBuffer;
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
